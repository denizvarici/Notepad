<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAABgAAAA7AAAASwAA
        AEsAAABKAAAASgAAAEkAAABIAAAASAAAAEcAAABGAAAARQAAAEQAAABEAAAAQwAAAD8AAAAkAAAABgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEJCQl5NTU1zmBg
        YO1ycnL1cnJy9XBwcPRwcHD0b29v9G5ubvNubm7zbW1t82xsbPJra2vyampq8mpqavFqamrxZmZm8EVF
        Rd0XFxejAAAAMgICAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIERERloCA
        gP3l5eX//f39////////////////////////////////////////////////////////////////////
        ///+/v7/8fHx/7Kysv8tLS3LAAAAHAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQEBAAAA
        AENhYWHy9/f3//b29v/w8PD/8PDw//Hx8f/x8fH/8fHx//Hx8f/y8vL/8vLy//Ly8v/z8/P/8/Pz//Pz
        8//z8/P/8/Pz//T09P/8/Pz//////4ODg/0AAABcAgICAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAhISEACQkJhKqqqv//////zMzM/6urq/+tra3/ra2t/6ysrP+srKz/rKys/6ysrP+srKz/q6ur/6ur
        q/+qqqr/qqqq/6qqqv+qqqr/rKys/+fn5///////rKys/wgICIAUFBQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wATExOcrq6u/+bm5v/h4eH/39/f/97e3v/e3t7/3d3d/9zc3P/c3Nz/3Nzc/+Dg
        4P/p6en/9/f3//r6+v/6+vr/+vr6//r6+v/6+vr//f39//////+0tLT/CwsLiSUlJQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////AA8PD5uPj4//vr6+/6enp/+fn5//oKCg/6CgoP+goKD/oKCg/6Gh
        of+hoaH/oqKi/6Wlpf+7u7v/0tLS/9LS0v/S0tL/09PT/9bW1v/29vb//////7W1tf8MDAyKKCgoAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACVlZUADg4OmI2Njf++vr7/paWl/5ubm/+bm5v/m5ub/5ub
        m/+ampr/mpqa/5qamv+ampr/mZmZ/5mZmf+xsbH/wsLC/8DAwP/AwMD/w8PD//Hx8f//////tbW1/wwM
        DIssLCwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAF9fXwANDQ2VjIyM/7+/v/+9vb3/vb29/729
        vf+9vb3/vb29/729vf+9vb3/vb29/76+vv++vr7/vb29/9fX1///////////////////////////////
        //+2trb/DQ0NjDAwMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQkJCAAwMDJKNjY3/wcHB/6Ki
        ov+SkpL/k5OT/5OTk/+Tk5P/lJSU/5SUlP+Tk5P/kZGR/5GRkf+RkZH/mZmZ/7Kysv+0tLT/tLS0/7i4
        uP/s7Oz//////7e3t/8ODg6NNDQ0AAAAAAAAAAAPAAAAQAAAAFMAAABTAAAAUwAAAFQAAABTBgYGtVtb
        W/99fX7/cXFy/2xsbf9sbG3/a2tt/2pqa/9qamv/a2ts/4CAgv+lpaX/rq6u/6ysrP+wsLD/2NjY/+Pj
        4//i4uL/4uLi//f39///////uLi4/w4ODo44ODgAAAAAKxsbDLRWVyf1bm4x/G5uMfxubjH8b28y/G9v
        MvxubzL+cHAz/3BxM/9xcjT/cnM1/3JzNf9yczX/c3Q1/3N0Nf9xcjT/VlYt/05OR/+enp//tLS0/7S0
        tP/d3d3/8fHx//Dw8P/x8fH//Pz8//////+5ubn/Dw8Pjjw8PAAHBwOWgIE5/9XWX//X2GD/19hg/9fY
        YP/X2GD/19hg/9fYYP/X2GD/19hg/9fYYP/X2GD/19hg/9fYYP/X2GD/19hg/9fYYP/R0l3/h4g7/z09
        Nf+Hh4j/jY2N/5ubm/+srKz/q6ur/7Kysv/w8PD//////7q6uv8PDw+PQEBAAAcHA5WPj0D/2Nlh/9TV
        X//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9XW
        X//Q0V3/U1Mr/4uLjf+8vLz/z8/P//v7+//9/f3//f39//7+/v//////u7u7/xAQEJBISEgAAAAAS1NU
        JfDR0l3/1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TV
        X//U1V//1NVf/9fYYP+Wl0L/TExH/6Skpf+wsLD/1dXV/9ra2v/h4eH//Pz8//////+8vLz/EBAQkVJS
        UgAAAAAMGRkLsKOkSf/X2GD/1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TV
        X//U1V//1NVf/9TVX//U1V//1dZf/83OXP9NTSf/ampr/5mZmf+wsLD/urq6/8bGxv/6+vr//////729
        vf8RERGSXV1dAAICAQAAAABKVFUm89DRXf/U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TV
        X//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//19hg/5maQ/9OT0j/uLi5/+bm5v//////////////
        ////////vb29/xEREZNqamoAAAAAAAAAAAkWFgqsn6BH/9fYYP/U1V//1NVf/9TVX//U1V//1NVf/9TV
        X//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//zs9c/1NUK/9sbG7/pKSk/7W1
        tf/Jycn//Pz8//////++vr7/EhISlHt7ewAAAAAAAQEAAAAAAEVQUCTwz9Bd/9TVX//U1V//1NVf/9TV
        X//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//X2GD/nZ1F/0FB
        Ov+vr7D/3Nzc/+fn5//+/v7//////7+/v/8SEhKVj4+PAAAAAAAAAAAAAAAABxMUCaabnEX/19hg/9TV
        X//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TV
        X//P0Fz/Vlcs/4uLjP/v7+//+Pj4////////////wMDA/xISEpaqqqoAAAAAAAAAAAABAQAAAAAAQEtM
        Iu7Nzlz/1dZf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TVX//U1V//1NVf/9TV
        X//U1V//1NVf/9fYYP+goUf/PDw0/5qamv++vr7/+/v7///////AwMD/EhISl83NzQAAAAAAAAAAAAAA
        AAAAAAAGEREHoJaXQ//X2GD/1NVf/9HSXv/Nzlz/zc5c/87PXf/Oz13/zs9d/8/QXf/P0F3/z9Bd/8/Q
        Xf/Q0V3/0NFd/9LTXv/U1V//1NVf/9DRXf9XWCv/oKCh//7+/v///////////8DAwP8TExOY////AAAA
        AAAAAAAAAAAAAAAAAAAAAAA7R0cg68vMW//X2GD/k5NG/0lJKv9MSyv/TEwr/01MK/9NTSv/Tk0s/05O
        LP9PTiz/UE8s/1BQLf9OTiz/jIxD/9XWX//U1V//19hg/6OjR/9WVk3/2trb////////////wcHB/xMT
        E5n///8AAAAAAAAAAAAAAAAAAAAAAAAAAAQODgabkpNB/9jZYf+5ulT/mppJ/5ucSf+bm0n/mptJ/5qa
        Sf+ZmUj/mJhI/5eXSP+Wl0f/lZZH/5SUR/+ys1L/2Nlg/9XWX//U1V//0tJe/1hYKf+Li43/////////
        ///CwsL/FBQUmv///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZDQx7oycpa/9bXYP/V1l//jo5E/25u
        OP9xcDn/cnE5/3JyOv9zczr/dHQ6/3V1O/92djv/d3c7/3Z2O/92djv/tbZT/9bXYP/X2GD/pqZI/1tb
        Uf/x8fL//////8PDw/8VFRWb////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwwMBZWNjj//19hg/9LT
        Xv+Pj0T/cHA4/3BwOf9vbzj/bm44/21tOP9tbDf/bGw3/2trN/9qajf/aWk2/2pqNv+xslL/1tdg/9TV
        X//S017/YGEv/6ioqf//////xMTE/xUVFZ3///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMT8/
        HOXHyFn/1dZf/9fYYP/X2GD/1tdg/9fYYP/X2GD/1tdg/9jZYP/X2GD/1tdg/9jZYP/W12D/1tdg/9bX
        YP/U1V//1NVf/9jZYf+oqUr/WFhN//Pz8/+/v7//EhISlrCwsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAACCgoFj4aGPP/Z2mH/urpZ/7q6WP/Y2WD/vLxZ/7u8WP/X2GD/trdX/8fIW//V1mD/uLlX/87P
        Xf/S01//t7dX/9PTX//Ozl3/wsNa/9TVX/9mZzH/o6Ok/5GRkf8AAABrCAgIAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAlIyMPyIGBPP+Ojl7/k5RL/7W2Uv+QkV//lJRL/7a2Vv+Ghlr/oaJM/7a3
        Wf+BgVb/qqpN/7GxXP+BgVP/tbVQ/6WmXf+FhU3/vb5U/4SFOv8zMy7/KysrzAAAACAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiGxsYhlFSTdcsLB7PNDQn0lJSS9wqKhvVPz8z4ElJ
        Qd4nKBfcQ0Q44kFBOOAlJhXjSktA6Tc3LOQrLBrrUVFI7ioqHOUlJRTtEBAH1QEBAJ4AAAAvAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH1+gQCCg4UDfn+AXXt8fYRxc3Qwe3x9YHh5
        eodyc3RBeHl6eXN0doNsbW8/dXV2h21ub4BrbG1Mb3Bxkmhpa3hvcHFsZ2hqllpaXGkAAAAUAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIWGhgCGhoYFhYaGD4eH
        hwCHiIgGhoeHEY2OjgGGh4cOh4iIE////wCHiIgYiImJFZSVlQGJioociouLD4iJiQqIiYkxi4yMDYmK
        igAAAAAAAAAAAAAAAAAAAAAA/8AAB/+AAAP/AAAB/wAAAf8AAAH/AAAB/wAAAf8AAAH/AAAB/wAAAYAA
        AAEAAAABAAAAAQAAAAEAAAABAAAAAYAAAAGAAAABwAAAAcAAAAHgAAAB4AAAAfAAAAHwAAAB+AAAAfgA
        AAH8AAAB/AAAAf4AAAH/AAAD/4AAB//IIB8=
</value>
  </data>
</root>